/**
  \page temp CFS Software Bus Network TEMPLATE Module

  <UL>
    <LI> \subpage sbntemprevhist </LI>
    <LI> \subpage sbntempovr </LI>
    <LI> \subpage sbntempopr </LI>
    <LI> \subpage sbntempcfg </LI>
    <LI> \subpage sbntempcons </LI>
  </UL>
**/

/**
  \page sbntemprevhist SBN TEMPLATE Module User's Guide Revision History

  <TABLE BORDER="1" CELLPADDING="2" WIDTH="60%">
  <TR><TD WIDTH="15%"><B>Date</B></TD> <TD WIDTH="15%"><B>Author</B></TD> <TD WIDTH="30%"><B>Comments</B></TD></TR>
  <TR><TD WIDTH="15%">6/02/2014</TD> <TD WIDTH="15%">AUTHORNAME</TD> <TD WIDTH="30%">Initial revision</TD></TR>
  </TABLE>

  Next: \ref sbntempovr
**/

/**
  \page sbntempovr SBN TEMPLATE Module Overview

  The TEMPLATE plugin for the Software Bus Network (SBN) allows two CPUs 
  running cFE to send software bus (SB) messages to each other through an 
  TEMPLATE connection. This plugin is never used directly by a user cFE app; 
  instead it is used by the SBN to make message passing across CPUs transparent 
  to other apps. 

  SBN uses this module by internally calling a set of functions:
  <UL>
    <LI>#TEMPLATE_SbnParseInterfaceFileEntry    (Reads module setup from SBN peer data file)
    <LI>#TEMPLATE_SbnInitPeerInterface          (Initializes TEMPLATE interface)
    <LI>#TEMPLATE_SbnSendNetMsg                 (Sends SB or SBN messages to other CPU)
    <LI>#TEMPLATE_SbnCheckForNetProtoMsg        (Checks for SBN protocol messages)
    <LI>#TEMPLATE_SbnReceiveMsg                 (Reads software bus messages from other CPU)
    <LI>#TEMPLATE_SbnVerifyPeerInterface        (Makes sure peer entry has matching host)
    <LI>#TEMPLATE_SbnVerifyHostInterface        (Makes sure host entry has matching peer)
    <LI>#TEMPLATE_SbnReportModuleStatus         (Reports the current status of the module)
    <LI>#TEMPLATE_SbnResetPeer                  (Resets the peer back to a clean state)
    <LI>#TEMPLATE_SbnDeleteHostResources        (Deletes resources for the host)
    <LI>#TEMPLATE_SbnDeletePeerResources        (Deletes resources for the peer)
  </UL>

  These functions then use TEMPLATE-specific read/write operations to 
  pass messages. 

  Next: \ref sbntempopr <BR>
  Prev: \ref sbntemprevhist
**/

/**
  \page sbntempopr SBN TEMPLATE Module Operation
  
  Explain how the module works on a high level on this page. 

  Next: \ref sbntempcfg <BR>
  Prev: \ref sbntempovr
**/

/**
  \page sbntempcfg SBN TEMPLATE Module Configuration

  <H1>SBN Peer Data File Entry</H1>

  The file entry in SbnPeerData.dat for a TEMPLATE interface requires X fields.
  The first 4 fields are the fields required of all interface modules:
  <UL>
    <LI>Peer Name
    <LI>Processor ID
    <LI>Protocol ID (XX for TEMPLATE)
    <LI>Spacecraft ID
  </UL>

  The remaining fields are the interface specific fields:
  <UL>
    <LI>Add fields here
  </UL>

  The TEMPLATE interface (does/does not) require any kind of "matching" pairs.  
  An example of TEMPLATE entries is below.

  <TABLE BORDER="1" CELLPADDING="2" WIDTH="60%">
  <TR>
    <TD WIDTH="5%"><B>Name</B></TD> 
    <TD WIDTH="10%"><B>Processor ID</B></TD>
    <TD WIDTH="10%"><B>Protocol ID</B></TD>
    <TD WIDTH="10%"><B>Spacecraft ID</B></TD>
    <TD WIDTH="10%"><B>Other Field</B></TD>
  </TR>
  <TR>
    <TD WIDTH="5%">CPU1</TD> 
    <TD WIDTH="10%">1</TD> 
    <TD WIDTH="10%">1</TD>
    <TD WIDTH="10%">0</TD>
    <TD WIDTH="10%">...</TD>
  </TR>
  <TR>
    <TD WIDTH="5%">CPU2</TD> 
    <TD WIDTH="10%">2</TD> 
    <TD WIDTH="10%">1</TD>
    <TD WIDTH="10%">0</TD>
    <TD WIDTH="10%">...</TD>
  </TR>
  </TABLE>  

  Next: \ref sbntempcons <BR>
  Prev: \ref sbntempopr
**/

/**
  \page sbntempcons SBN TEMPLATE Module Constraints

  <UL>
    <LI>List any constraints/requirements here
  </UL>

  Prev: \ref sbntempcfg
**/
