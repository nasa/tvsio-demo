/**
  \page ipv4 CFS Software Bus Network IPv4 Module

  <UL>
    <LI> \subpage sbnipv4revhist </LI>
    <LI> \subpage sbnipv4ovr </LI>
    <LI> \subpage sbnipv4opr </LI>
    <LI> \subpage sbnipv4cfg </LI>
    <LI> \subpage sbnipv4cons </LI>
  </UL>
**/

/**
  \page sbnipv4revhist SBN IPv4 Module User's Guide Revision History

  <TABLE BORDER="1" CELLPADDING="2" WIDTH="60%">
  <TR><TD WIDTH="15%"><B>Date</B></TD> <TD WIDTH="15%"><B>Author</B></TD> <TD WIDTH="30%"><B>Comments</B></TD></TR>
  <TR><TD WIDTH="15%">6/02/2014</TD> <TD WIDTH="15%">ejtimmon</TD> <TD WIDTH="30%">Initial revision</TD></TR>
  </TABLE>

  Next: \ref sbnipv4ovr
**/

/**
  \page sbnipv4ovr SBN IPv4 Module Overview

  The Ethernet IPv4 plugin for the Software Bus Network (SBN) allows two CPUs 
  running cFE to send software bus (SB) messages to each other through an 
  Ethernet connection. This plugin is never used directly by a user cFE app; 
  instead it is used by the SBN to make message passing across CPUs transparent 
  to other apps. 

  SBN uses this module by internally calling a set of functions:
  <UL>
    <LI>#SBN_ParseIPv4FileEntry         (Reads module setup from SBN peer data file)
    <LI>#SBN_InitIPv4IF                 (Initializes IPv4 interface)
    <LI>#SBN_SendIPv4NetMsg             (Sends SB or SBN messages to other CPU)
    <LI>#SBN_CheckForIPv4NetProtoMsg    (Checks for SBN protocol messages)
    <LI>#SBN_IPv4RcvMsg                 (Reads software bus messages from other CPU)
    <LI>#IPv4_VerifyPeerInterface       (Makes sure peer entry has matching host)
    <LI>#IPv4_VerifyHostInterface       (Makes sure host entry has matching peer)
  </UL>

  These functions then use Ethernet IPv4-specific read/write operations to 
  pass messages. 

  Next: \ref sbnipv4opr <BR>
  Prev: \ref sbnipv4revhist
**/

/**
  \page sbnipv4opr SBN IPv4 Module Operation
  

  Next: \ref sbnipv4cfg <BR>
  Prev: \ref sbnipv4ovr
**/

/**
  \page sbnipv4cfg SBN IPv4 Module Configuration

  <H1>SBN Peer Data File Entry</H1>

  The file entry in SbnPeerData.dat for a Ethernet IPv4 interface requires 7 fields.
  The first 4 fields are the fields required of all interface modules:
  <UL>
    <LI>Peer Name
    <LI>Processor ID
    <LI>Protocol ID (1 for IPv4 Ethernet)
    <LI>Spacecraft ID
  </UL>

  The remaining fields are the interface specific fields:
  <UL>
    <LI>IP Address
    <LI>Data Port
    <LI>Protocol Port
  </UL>

  The Ethernet IPv4 interface does not require any kind of "matching" pairs.  The protocol port
  is arbitrary, but must be unique for processor/system.  An example of Ethernet IPv4 entries 
  is below.

  <TABLE BORDER="1" CELLPADDING="2" WIDTH="60%">
  <TR>
    <TD WIDTH="5%"><B>Name</B></TD> 
    <TD WIDTH="10%"><B>Processor ID</B></TD>
    <TD WIDTH="10%"><B>Protocol ID</B></TD>
    <TD WIDTH="10%"><B>Spacecraft ID</B></TD>
    <TD WIDTH="10%"><B>IP Address</B></TD>
    <TD WIDTH="10%"><B>Data Port</B></TD>
    <TD WIDTH="10%"><B>Protocol Port</B></TD>
  </TR>
  <TR>
    <TD WIDTH="5%">CPU1</TD> 
    <TD WIDTH="10%">1</TD> 
    <TD WIDTH="10%">1</TD>
    <TD WIDTH="10%">0</TD>
    <TD WIDTH="10%">192.168.1.76</TD>
    <TD WIDTH="10%">15820</TD>
    <TD WIDTH="10%">5821</TD>
  </TR>
  <TR>
    <TD WIDTH="5%">CPU2</TD> 
    <TD WIDTH="10%">2</TD> 
    <TD WIDTH="10%">1</TD>
    <TD WIDTH="10%">0</TD>
    <TD WIDTH="10%">192.168.1.77</TD>
    <TD WIDTH="10%">15820</TD>
    <TD WIDTH="10%">5822</TD>
  </TR>
  </TABLE>  

  Next: \ref sbnipv4cons <BR>
  Prev: \ref sbnipv4opr
**/

/**
  \page sbnipv4cons SBN IPv4 Module Constraints

  <UL>
    <LI>The protocol port is arbitrary, but must be unique for processor/system.
    <LI>There is no way to send large packets to peers.  The maximum network packet size
        is constrained by the MTU (usually ~1500 bytes).
  </UL>

  Prev: \ref sbnipv4cfg
**/
