        -:    0:Source:/home/mdeschu/cfe-660-ut/cfe/fsw/cfe-core/src/fs/cfe_fs_priv.c
        -:    0:Programs:3
        -:    1:/*
        -:    2:** $Id: cfe_fs_priv.c 1.6 2012/01/13 12:11:29GMT-05:00 acudmore Exp  $
        -:    3:**
        -:    4:**      Copyright (c) 2004-2012, United States government as represented by the 
        -:    5:**      administrator of the National Aeronautics Space Administration.  
        -:    6:**      All rights reserved. This software(cFE) was created at NASA's Goddard 
        -:    7:**      Space Flight Center pursuant to government contracts.
        -:    8:**
        -:    9:**      This is governed by the NASA Open Source Agreement and may be used, 
        -:   10:**      distributed and modified only pursuant to the terms of that agreement.
        -:   11:** 
        -:   12:** Purpose:  cFE File Services (FS) library API Initialization 
        -:   13:**
        -:   14:** Author:  Alan Cudmore/NASA GSFC 
        -:   15:**
        -:   16:** Notes:
        -:   17:**
        -:   18:*/
        -:   19:
        -:   20:
        -:   21:/*
        -:   22:** Required header files
        -:   23:*/
        -:   24:#include "osapi.h"
        -:   25:#include "private/cfe_private.h"
        -:   26:#include "cfe_es.h"
        -:   27:#include "cfe_fs.h"
        -:   28:#include "cfe_fs_priv.h"
        -:   29:
        -:   30:#include <string.h>
        -:   31:
        -:   32:/*
        -:   33:** Global data
        -:   34:** 
        -:   35:*/
        -:   36:CFE_FS_t CFE_FS;
        -:   37:
        -:   38:/******************************************************************************
        -:   39:**  Function:  CFE_FS_EarlyInit()
        -:   40:**
        -:   41:**  Purpose:
        -:   42:**    Initialize the FS data structures before the cFE runs.
        -:   43:**
        -:   44:**  Arguments:
        -:   45:**
        -:   46:**  Notes:
        -:   47:**    This function MUST be called before any FS API's are called.
        -:   48:**
        -:   49:**  Return:
        -:   50:**    CFE_SUCCESS
        -:   51:*/
        2:   52:int32 CFE_FS_EarlyInit (void) 
        -:   53:{
        2:   54:    int32 Stat = CFE_SUCCESS;
        -:   55:
        2:   56:    Stat = OS_MutSemCreate(&CFE_FS.SharedDataMutexId, "CFE_FS_SharedMutex", 0);
        2:   57:    if( Stat != OS_SUCCESS )
        -:   58:    {
        1:   59:      CFE_ES_WriteToSysLog("FS Shared Data Mutex creation failed! RC=0x%08x\n",(unsigned int)Stat);
        1:   60:      return Stat;
        -:   61:    }/* end if */
        -:   62:
        1:   63:    return Stat;
        -:   64:
        -:   65:}/* end CFE_FS_EarlyInit */
        -:   66:
        -:   67:/******************************************************************************
        -:   68:**  Function:  CFE_FS_LockSharedData()
        -:   69:**
        -:   70:**  Purpose:
        -:   71:**    FS internal function to handle a semaphore take failure for the FS 
        -:   72:**    Data Mutex
        -:   73:**
        -:   74:**  Arguments:
        -:   75:**    FunctionName   - the Function Name of the code that generated the error.
        -:   76:**
        -:   77:**  Return:
        -:   78:**    None
        -:   79:*/
        5:   80:void CFE_FS_LockSharedData(const char *FunctionName)
        -:   81:{
        -:   82:    int32   Status;
        5:   83:    uint32  AppId = 0;
        -:   84:
        5:   85:    Status = OS_MutSemTake(CFE_FS.SharedDataMutexId);
        5:   86:    if (Status != OS_SUCCESS) 
        -:   87:    {
        1:   88:        CFE_ES_GetAppID(&AppId);
        -:   89:
        1:   90:        CFE_ES_WriteToSysLog("FS SharedData Mutex Take Err Stat=0x%x,App=%d,Function=%s\n",
        -:   91:                (unsigned int)Status,(int)AppId,FunctionName);
        -:   92:
        -:   93:    }/* end if */
        -:   94:
        5:   95:    return;
        -:   96:
        -:   97:}/* end CFE_FS_LockSharedData */
        -:   98:
        -:   99:/******************************************************************************
        -:  100:**  Function:  CFE_FS_UnlockSharedData()
        -:  101:**
        -:  102:**  Purpose:
        -:  103:**    FS internal function to handle a semaphore give failure for the Shared
        -:  104:**    Data Mutex
        -:  105:**
        -:  106:**  Arguments:
        -:  107:**    FunctionName - the Function containing the code that generated the error.
        -:  108:**
        -:  109:**  Return:
        -:  110:**    None
        -:  111:*/
        5:  112:void CFE_FS_UnlockSharedData(const char *FunctionName)
        -:  113:{
        -:  114:   int32   Status;
        5:  115:   uint32  AppId = 0;
        -:  116:
        5:  117:   Status = OS_MutSemGive(CFE_FS.SharedDataMutexId);
        5:  118:   if (Status != OS_SUCCESS) 
        -:  119:   {
        1:  120:       CFE_ES_GetAppID(&AppId);
        1:  121:       CFE_ES_WriteToSysLog("FS SharedData Mutex Give Err Stat=0x%x,App=%d,Function=%s\n",
        -:  122:               (unsigned int)Status,(int)AppId,FunctionName);
        -:  123:
        -:  124:   }/* end if */
        5:  125:   return;
        -:  126:
        -:  127:}/* end CFE_FS_UnlockSharedData */
        -:  128:
        -:  129:/************************/
        -:  130:/*  End of File Comment */
        -:  131:/************************/
